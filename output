[?25l[2J"./ActiveDirectory/AD_auth_attacks.md"
"./ActiveDirectory/AD_auth_attacks.md"
File read.
test : Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }
TreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[1;1H[38;5;8m┌ Explore : ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐[2;1H│[1m[38;5;3m[48;5;4m>> AVBypass                                                                                                                                                                                                                         [22m[38;5;8m[49m│[3;1H│[38;5;15m   ActiveDirectory                                                                                                                                                                                                                  [38;5;8m│[4;1H│[38;5;15m   Network                                                                                                                                                                                                                          [38;5;8m│[5;1H│[38;5;15m   General                                                                                                                                                                                                                          [38;5;8m│[6;1H│[38;5;15m   ApplicationSecurity                                                                                                                                                                                                              [38;5;8m│[7;1H└────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘[8;1H[38;5;15m┌ Input [Search] : ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐[9;1H└────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘[10;1H[38;5;8m┌ Explore : ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐[11;1H│                                                                                                                                                                                                                                    │[12;1H│                                                                                                                                                                                                                                    │[13;1H└────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25lTreeNodes { nodes: [Root { children: [Heading { children: [Text { value: "AD authentication Attacks", position: Some(1:3-1:28 (2-27)) }], position: Some(1:1-1:29 (0-28)), depth: 1 }, Heading { children: [Text { value: "Active Directory Authentication", position: Some(3:4-3:35 (33-64)) }], position: Some(3:1-3:36 (30-65)), depth: 2 }, Heading { children: [Text { value: "Cached credentials in Kerberos", position: Some(5:5-5:35 (71-101)) }], position: Some(5:1-5:35 (67-101)), depth: 3 }, Paragraph { children: [Text { value: "Microsoft's implementation of kerberos makes use of single sign-on, so passwords hashes must be stored somewhere in order to renew a TGT request.", position: Some(6:1-6:146 (102-247)) }], position: Some(6:1-6:147 (102-248)) }, Paragraph { children: [Text { value: "in modern versions, it is stored in the ", position: Some(8:1-8:41 (250-290)) }, Emphasis { children: [Text { value: "local security authority subsystem (LSASS)", position: Some(8:42-8:84 (291-333)) }], position: Some(8:41-8:85 (290-334)) }, Text { value: " memory.", position: Some(8:85-8:93 (334-342)) }], position: Some(8:1-8:93 (250-342)) }, List { children: [ListItem { children: [Paragraph { children: [Emphasis { children: [Strong { children: [Text { value: "We need SYSTEM (or local administrator) permissions to get access to the stored hashes on a target.", position: Some(10:6-10:105 (349-448)) }], position: Some(10:4-10:107 (347-450)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:3-10:108 (346-451)) }], position: Some(10:1-10:108 (344-451)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "To extract the hashes we use ", position: Some(11:3-11:32 (454-483)) }, Emphasis { children: [Text { value: "Mimikatz", position: Some(11:33-11:41 (484-492)) }], position: Some(11:32-11:42 (483-493)) }], position: Some(11:3-11:42 (454-493)) }], position: Some(11:1-11:42 (452-493)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "Because of its well known detection signatures, we should execute mimikatz from memory using an injector like Powershell to avoid AV.", position: Some(12:3-12:136 (496-629)) }], position: Some(12:3-12:136 (496-629)) }], position: Some(12:1-12:136 (494-629)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "We can also use a built-in tool like Task Manager to dump the entire LSASS and then load the data into mimikatz on a different machine.", position: Some(13:3-13:138 (632-767)) }], position: Some(13:3-13:138 (632-767)) }], position: Some(13:1-13:138 (630-767)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "With Mimikatz, we can export tickets to a persistent storage or import keys.", position: Some(14:3-14:79 (770-846)) }], position: Some(14:3-14:80 (770-847)) }], position: Some(14:1-15:1 (768-848)), spread: false, checked: None }], position: Some(10:1-15:1 (344-848)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Attacks on Active Directory Authentication", position: Some(16:4-16:46 (852-894)) }], position: Some(16:1-16:46 (849-894)), depth: 2 }, Heading { children: [Text { value: "Password attacks", position: Some(18:5-18:21 (900-916)) }], position: Some(18:1-18:21 (896-916)), depth: 3 }, Heading { children: [Text { value: "Password spraying", position: Some(19:6-19:23 (922-939)) }], position: Some(19:1-19:24 (917-940)), depth: 4 }, Paragraph { children: [Text { value: "TODO:", position: Some(20:1-20:6 (941-946)) }], position: Some(20:1-20:6 (941-946)) }, Heading { children: [Text { value: "Obtaining the lockout policy", position: Some(21:6-21:34 (952-980)) }], position: Some(21:1-21:34 (947-980)), depth: 4 }, Paragraph { children: [Text { value: "We must always take into account lockouts when performing brute-force attacks or wordlsit auth attack.\nTo obtain the lockout policy we can run the following:", position: Some(22:1-23:55 (981-1139)) }], position: Some(22:1-23:56 (981-1140)) }, Code { value: "net accounts", position: Some(24:1-26:4 (1141-1171)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "Looking at the following lines :", position: Some(27:1-27:33 (1172-1204)) }], position: Some(27:1-27:34 (1172-1205)) }, Code { value: "Lockout threshold:                                    5\nLockout duration (minutes):                           30\nLockout observation window (minutes):                 30", position: Some(28:1-32:4 (1206-1383)), lang: None, meta: None }, Paragraph { children: [Text { value: "We can try 4 times before we have to wait the observation window time to try again.", position: Some(33:1-33:84 (1384-1467)) }], position: Some(33:1-33:85 (1384-1468)) }, Heading { children: [Text { value: "AS-REP Roasting", position: Some(35:5-35:20 (1474-1489)) }], position: Some(35:1-35:21 (1470-1490)), depth: 3 }, Paragraph { children: [Text { value: "As a recall, the first step of the authentication process via kerberos is to send an AS-REQ.\nBased on the request, the DC validates if the authentication is a success.\n", position: Some(36:1-38:1 (1491-1661)) }, Strong { children: [Text { value: "If it is", position: Some(38:3-38:11 (1663-1671)) }], position: Some(38:1-38:13 (1661-1673)) }, Text { value: ", the DC replies with an AS-REP containing the session key and the TGT.\nThis step is known as ", position: Some(38:13-39:23 (1673-1768)) }, Strong { children: [Text { value: "kerberos Preauthentication", position: Some(39:25-39:51 (1770-1796)) }], position: Some(39:23-39:53 (1768-1798)) }, Text { value: " and prevents offline passwords guessing.", position: Some(39:53-39:94 (1798-1839)) }], position: Some(36:1-39:95 (1491-1840)) }, Paragraph { children: [Text { value: "We can use an AS-REP attack when required preauth option is disabled.", position: Some(41:1-41:70 (1842-1911)) }], position: Some(41:1-41:71 (1842-1912)) }, Heading { children: [Text { value: "using impacket with ", position: Some(43:6-43:26 (1919-1939)) }, InlineCode { value: "impacket-GetNPUsers", position: Some(43:26-43:47 (1939-1960)) }], position: Some(43:1-43:47 (1914-1960)), depth: 4 }, Paragraph { children: [Text { value: "The Output file can be used directly with ", position: Some(44:1-44:43 (1961-2003)) }, InlineCode { value: "Hashcat", position: Some(44:43-44:52 (2003-2012)) }, Text { value: ".", position: Some(44:52-44:53 (2012-2013)) }], position: Some(44:1-44:54 (1961-2014)) }, Code { value: "impacket-GetNPUsers -dc-ip <Domain-controller-IP>  -request -outputfile hashes.asreproast domain.com/username", position: Some(46:1-48:4 (2016-2137)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "using Rubeus on windows", position: Some(49:6-49:29 (2143-2166)) }], position: Some(49:1-49:29 (2138-2166)), depth: 4 }, Paragraph { children: [Text { value: "source : ", position: Some(50:1-50:10 (2167-2176)) }, Link { children: [Text { value: "https://github.com/GhostPack/Rubeus", position: Some(50:11-50:46 (2177-2212)) }], position: Some(50:10-50:84 (2176-2250)), url: "https://github.com/GhostPack/Rubeus", title: None }], position: Some(50:1-50:84 (2167-2250)) }, Paragraph { children: [Text { value: "Leveraging the AS-REP roast attack with Rubeus in Windows is as straight forward as the following:", position: Some(52:1-52:99 (2252-2350)) }], position: Some(52:1-52:100 (2252-2351)) }, Code { value: ".\\Rubeus.exe asreproast /nowrap", position: Some(53:1-55:4 (2352-2401)), lang: Some("powershell"), meta: None }, Paragraph { children: [Text { value: "It will display the AS-REP hash in Hashcat format.", position: Some(56:1-56:51 (2402-2452)) }], position: Some(56:1-56:52 (2402-2453)) }, Heading { children: [Text { value: "Note", position: Some(58:6-58:10 (2460-2464)) }], position: Some(58:1-58:10 (2455-2464)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If we have a user with ", position: Some(59:3-59:30 (2467-2494)) }, Emphasis { children: [Strong { children: [Text { value: "GenericWrite", position: Some(59:33-59:45 (2497-2509)) }], position: Some(59:31-59:47 (2495-2511)) }], position: Some(59:30-59:48 (2494-2512)) }, Text { value: " or ", position: Some(59:48-59:52 (2512-2516)) }, Emphasis { children: [Strong { children: [Text { value: "GenericAll", position: Some(59:55-59:65 (2519-2529)) }], position: Some(59:53-59:67 (2517-2531)) }], position: Some(59:52-59:68 (2516-2532)) }, Text { value: " permissions, instead of renewing the password, we could ", position: Some(59:68-59:125 (2532-2589)) }, Strong { children: [Text { value: "leverage these permissions to modify the User Account Control value of the user to not require a Kerberos preauth.", position: Some(59:127-59:241 (2591-2705)) }], position: Some(59:125-59:243 (2589-2707)) }, Text { value: " This Attack is known as ", position: Some(59:243-59:268 (2707-2732)) }, Emphasis { children: [Strong { children: [Text { value: "Targeted AS-REP Roasting", position: Some(59:271-59:295 (2735-2759)) }], position: Some(59:269-59:297 (2733-2761)) }], position: Some(59:268-59:298 (2732-2762)) }, Text { value: ".", position: Some(59:298-59:299 (2762-2763)) }], position: Some(59:3-59:300 (2467-2764)) }], position: Some(59:1-59:300 (2465-2764)), spread: false, checked: None }], position: Some(59:1-59:300 (2465-2764)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Kerberoasting", position: Some(60:5-60:18 (2769-2782)) }], position: Some(60:1-60:19 (2765-2783)), depth: 3 }, Paragraph { children: [Text { value: "When requesting the service ticket from the domain controller, no checks are performed to confirm if the user has any permissions to access the service hosted by the Service Principal Name (SPN).", position: Some(61:1-61:196 (2784-2979)) }], position: Some(61:1-61:197 (2784-2980)) }, Paragraph { children: [Text { value: "These checks are done when connecting to the service. Thus, if we know the SPN that we want to target, we can request a service ticket for it from the DC.", position: Some(63:1-63:155 (2982-3136)) }], position: Some(63:1-63:156 (2982-3137)) }, Paragraph { children: [Text { value: "The service ticket is encrypted using the SPN's password hash. If we are able to decrypt it we can use this information to crack to password of the service account. This attack is known as ", position: Some(65:1-65:190 (3139-3328)) }, Emphasis { children: [Strong { children: [Text { value: "Kerberoasting", position: Some(65:193-65:206 (3331-3344)) }], position: Some(65:191-65:208 (3329-3346)) }], position: Some(65:190-65:209 (3328-3347)) }, Text { value: ".", position: Some(65:209-65:210 (3347-3348)) }], position: Some(65:1-65:211 (3139-3349)) }, Heading { children: [Text { value: "Obtaining the TGS-REP using Impacket", position: Some(66:6-66:42 (3355-3391)) }], position: Some(66:1-66:43 (3350-3392)), depth: 4 }, Code { value: "sudo impacket-GetUserSPNs -request -dc-ip <Domain-controller-IP> example.com/username", position: Some(68:1-70:4 (3394-3491)), lang: Some("bash"), meta: None }, Heading { children: [Text { value: "Obtaining the TGS-REP using Rubeus on windows", position: Some(72:6-72:51 (3498-3543)) }], position: Some(72:1-72:52 (3493-3544)), depth: 4 }, Code { value: ".\\Rubeus.exe kerberoast /outfile:hashes.kerberoast", position: Some(73:1-75:4 (3545-3613)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Note", position: Some(77:6-77:10 (3620-3624)) }], position: Some(77:1-77:11 (3615-3625)), depth: 4 }, List { children: [ListItem { children: [Paragraph { children: [Text { value: "[ ] If the SPN runs in the context of a computer account, a managed service account, or group-managed service account, the password is randomly generated and long that will make the cracking unoperable. Same thing with the ", position: Some(78:3-78:226 (3628-3851)) }, Emphasis { children: [Text { value: "krbtgt", position: Some(78:227-78:233 (3852-3858)) }], position: Some(78:226-78:234 (3851-3859)) }, Text { value: " user account which is the service account for the KDC.", position: Some(78:234-78:289 (3859-3914)) }], position: Some(78:3-78:290 (3628-3915)) }], position: Some(78:1-78:290 (3626-3915)), spread: false, checked: None }, ListItem { children: [Paragraph { children: [Text { value: "[ ] A user with ", position: Some(79:3-79:19 (3918-3934)) }, Emphasis { children: [Text { value: "GenericWrite", position: Some(79:20-79:32 (3935-3947)) }], position: Some(79:19-79:33 (3934-3948)) }, Text { value: " or ", position: Some(79:33-79:37 (3948-3952)) }, Emphasis { children: [Text { value: "GenericAll", position: Some(79:38-79:48 (3953-3963)) }], position: Some(79:37-79:49 (3952-3964)) }, Text { value: " could also set an SPN for the user, kerberoast the account and crack the password (", position: Some(79:49-79:133 (3964-4048)) }, Emphasis { children: [Strong { children: [Text { value: "targeted Kerberoasting", position: Some(79:136-79:158 (4051-4073)) }], position: Some(79:134-79:160 (4049-4075)) }], position: Some(79:133-79:161 (4048-4076)) }, Text { value: "), this will avoid the suspicious reset of a user's password.", position: Some(79:161-79:222 (4076-4137)) }], position: Some(79:3-79:223 (3918-4138)) }], position: Some(79:1-80:1 (3916-4139)), spread: false, checked: None }], position: Some(78:1-80:1 (3626-4139)), ordered: false, start: None, spread: false }, Heading { children: [Text { value: "Silvertickets", position: Some(81:5-81:18 (4144-4157)) }], position: Some(81:1-81:18 (4140-4157)), depth: 3 }, Paragraph { children: [Text { value: "The application on the server executing in the context of the service account checks the user's permissiosn from the group memberships included in the service ticket. However, the user and group permissions in the service ticket are not verified by the application in a majority of environments.", position: Some(83:1-83:296 (4159-4454)) }], position: Some(83:1-83:297 (4159-4455)) }, Heading { children: [Text { value: "Domain Controller Synchronisation", position: Some(86:5-86:38 (4462-4495)) }], position: Some(86:1-86:38 (4458-4495)), depth: 3 }, Paragraph { children: [Text { value: "The ", position: Some(87:1-87:5 (4496-4500)) }, Emphasis { children: [Text { value: "Directory Replication Service (DRS)", position: Some(87:6-87:41 (4501-4536)) }], position: Some(87:5-87:42 (4500-4537)) }, Text { value: " Remote protocol uses replication to synchronise the redundant domain controllers.\nA domain controller may request an update for a specific object like an account, using the ", position: Some(87:42-88:92 (4537-4712)) }, InlineCode { value: "IDL_DRSGetNCChanges", position: Some(88:92-88:113 (4712-4733)) }, Text { value: " API.\nThe Domain controller receiving this request does not check if the request came from a known domain controller, it only verifies the SID has the appropriate privileges.", position: Some(88:113-89:169 (4733-4908)) }], position: Some(87:1-89:170 (4496-4909)) }, Paragraph { children: [Text { value: "To launch a replication , a user needs to have Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned.", position: Some(91:1-91:286 (4911-5196)) }], position: Some(91:1-91:286 (4911-5196)) }, Paragraph { children: [Text { value: "If we have a user on these groups we can perform a ", position: Some(93:1-93:52 (5198-5249)) }, Emphasis { children: [Text { value: "dcsync", position: Some(93:53-93:59 (5250-5256)) }], position: Some(93:52-93:60 (5249-5257)) }, Text { value: " attack in which we impersonate a domain controller => we could request any user credentials from the domain.", position: Some(93:60-93:169 (5257-5366)) }], position: Some(93:1-93:170 (5198-5367)) }, Heading { children: [Text { value: "Using mimikatz", position: Some(95:6-95:20 (5374-5388)) }], position: Some(95:1-95:20 (5369-5388)), depth: 4 }, Code { value: "mimikatz # lsadump::dcsync /user:corp\\Administrator", position: Some(96:1-98:4 (5389-5458)), lang: Some("powershell"), meta: None }, Heading { children: [Text { value: "Using impacket on Linux", position: Some(100:6-100:29 (5465-5488)) }], position: Some(100:1-100:30 (5460-5489)), depth: 4 }, Code { value: "impacket-secretsdump -just-dc-user <user requested> example.com/adminaccount:\"supersecretpassword\"@<DC-IP>", position: Some(101:1-103:4 (5490-5608)), lang: Some("bash"), meta: None }], position: Some(1:1-104:1 (0-5609)) }] }

[39m[49m[59m[0m[?25l[?25h