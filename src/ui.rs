use ratatui::{
    layout::Alignment, style::{Color, Style}, text::Text, widgets::{Block, BorderType, Borders, Paragraph}, Frame
};
use tui_textarea::{Input, Key, TextArea};

use crate::app::App;

fn search_text(searchArea: &mut TextArea<'_>) {
    searchArea.set_cursor_line_style(Style::default());
    searchArea.set_cursor_style(Style::default());
    searchArea.set_block(
        Block::default()
            .borders(Borders::ALL)
            .style(Style::default().fg(Color::White))
            .title(" Search : ")
    );
}


/// Renders the user interface widgets.
pub fn render(app: &mut App, frame: &mut Frame) {
    let mut searchArea = TextArea::default();



    frame.render_widget(
        Paragraph::new(format!(
            "This is a tui template.\n\
                Press `Esc`, `Ctrl-C` or `q` to stop running.\n\
                Press left and right to increment and decrement the counter respectively.\n\
                Counter: {}",
            app.counter
        ))
        .block(
            Block::bordered()
                .title(" Pentest search engine ")
                .title_alignment(Alignment::Center)
                .border_type(BorderType::Double),
        )
        .style(Style::default().fg(Color::Green).bg(Color::Rgb(0, 0, 0)))
        .centered(),
        frame.size(),
    )
}