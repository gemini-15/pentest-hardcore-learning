use crate::app::{App, AppResult};
use std::{fs::{self, File}, io::Read, path::{Path, PathBuf}};
use markdown::{to_mdast};


pub struct FileNode {

    position: i32,
    
}



/// Parses a Markdown file into Multiple nodes. 
/// 
pub fn parse_md_to_nodes(filename: &Path) -> AppResult<()> {
    let mut file = match File::open(&filename) {
        Err(e) => panic!("{} => couldn't open file : {}",e, filename.display()),
        Ok(file) => file
    };  

    let mut s = String::new();
    match file.read_to_string(&mut s) {
        Err(e) => panic!("{} => couldn't read file : {}",e, filename.display()),
        Ok(_) => println!("File read.")
    }

    let mardown_parse = markdown::to_mdast(&s, &markdown::ParseOptions::default());
    


    Ok(())
}

