

/**
 * trait Section
 * can represent a bunch of paragraphs linked to a bunch of 
 * markdown titles 
 */
pub trait SectionDisplay {
    fn sectionDisplay(&self);
}

pub struct categorySection {
    
}

pub struct textSection {
    pub path: String,
    pub content: String, 
}

impl SectionDisplay for textSection {
    fn sectionDisplay(&self) {

    }
}

pub struct codeSection {
    pub path: String, 
    pub content: String, 
    pub language: String,
    pub copy: bool, 
}

impl SectionDisplay for codeSection {
    fn sectionDisplay(&self) {

    }
}

pub struct imageSection {
    pub path: String, 
    pub filename: String,
    pub image: Vec<i8>,
}

impl SectionDisplay for imageSection {
    fn sectionDisplay(&self) {

    }
}


#[derive(Debug)]
pub struct Explorer {
    pub sections : Vec<Box<dyn SectionDisplay>>,

}

impl Explorer {
    pub fn display(&self) {
        for section in self.sections.iter() {
            section.sectionDisplay();
        }
    }
}